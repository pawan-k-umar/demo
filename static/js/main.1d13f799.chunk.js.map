{"version":3,"sources":["components/Sidebar.js","App.js","index.js"],"names":["Sidebar","props","id","className","name1","props1","name2","props2","unit","name3","props3","name4","name5","props4","name6","props5","App","useState","name","setName","cityName","setCityName","err","setErr","data","setData","success","position","fetch","coords","latitude","longitude","then","response","json","result","catch","message","onLoad","navigator","geolocation","getCurrentPosition","type","placeholder","onChange","val","target","value","onClick","current","last_updated","humidity","wind_kph","forecast","forecastday","astro","sunrise","location","country","region","Math","floor","temp_c","src","condition","icon","alt","text","localtime","day","mintemp_c","maxtemp_c","sunset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d13f799.chunk.js","sourcesContent":["const Sidebar = (props)=>{\r\n    return (\r\n        <>\r\n        <div id=\"left\" className='container col-sm-10 mt-5'>\r\n          <p>{props.name1}{props.props1}</p>\r\n          <p>{props.name2}{props.props2}{props.unit}</p>\r\n          <p>{props.name3}{props.props3}{props.unit}{props.name4}</p>\r\n          <p>{props.name5}{props.props4}{props.name6}{props.props5}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\n\nfunction App() {\n  const [details, setDetails] = useState();\n\n  const [name, setName] = useState(\"\");\n  // const [tem, setTemp] = useState('0');\n  // const [condi, setcondi] = useState('');\n  // const [iconUrl, setIconUrl] = useState();\n  const [cityName, setCityName] = useState(\"london\");\n  // const [humidity, sethumidity] = useState();\n  // const [speed, setSpeed] = useState();\n  // const [minTemp, setMinTemp] = useState();\n  // const [maxTemp, setMaxTemp] = useState();\n  // const [sunset, setSunset] = useState();\n  // const [sunrise, setSunrise] = useState();\n  const [err, setErr] = useState();\n  // const[lastUpdated,setLatUpdated] = useState();\n  // const[time,setTime] = useState();\n  // const [countryName, setcountryName]=useState();\n  // const [region, setRegion]=useState();\n\n  const [data, setData] = useState();\n\n  // const APIKEY = '5d3e1ba6775c5a97031d5f4705beeaad';\n  const APIKEY = \"32fc58c655934bc59ac60022210205\";\n  // const url = 'https://api.openweathermap.org/data/2.5/weather?q='+cityName+'&units=metric&APPID='+APIKEY+'';\n  const url =\n    \"https://api.weatherapi.com/v1/forecast.json?key=\" +\n    APIKEY +\n    \"&q=\" +\n    cityName +\n    \"&days=1&aqi=no&alerts=no\";\n    fetch(url)\n    .then((response) => response.json())\n    .then((result) => {\n      // console.log(result);\n      // sethumidity(data.current.humidity)\n      // setTemp(data.current.temp_c)\n      // setSpeed(data.current.wind_kph)\n      // setcondi(data.current.condition.text)\n      // setIconUrl(data.current.condition.icon)\n      // setLatUpdated(data.current.last_updated)\n      // setSunrise(data.forecast.forecastday[0].astro.sunrise)\n      // setSunset(data.forecast.forecastday[0].astro.sunset)\n      // setMinTemp(data.forecast.forecastday[0].day.mintemp_c)\n      // setMaxTemp(data.forecast.forecastday[0].day.maxtemp_c)\n      // setTime(data.location.localtime)\n      // setcountryName(data.location.country)\n      // setRegion(data.location.region)\n      setData(result);\n    })\n    .catch((err) => {\n      setErr(err.message);\n    });\n\n  function getData(val) {\n    setName(val.target.value);\n  }\n\n  function onSubmit() {\n    setCityName(name);\n  }\n\n  // setCityName(details.data[0].name);\n\n  function getLocation(){\n    if(navigator.geolocation){\n        navigator.geolocation.getCurrentPosition(success)\n    }\n  }\n\n  function success(position){\n      fetch('http://api.positionstack.com/v1/reverse?access_key=d1e9bcde2fd7213738cef1e05a8908c5&query='+position.coords.latitude+','+position.coords.longitude+'')\n      .then((response)=>{return response.json()})\n      .then((data)=>{\n        // setDetails(data); \n        // // setCityName(da?)\n        setCityName(data.data[0].name);           \n      })\n  }\n\n  return (\n    <>\n      <div className=\"App container\" onLoad={getLocation}>\n        <h1 className=\"logo text-danger\"> Weather App </h1>{\" \"}\n        <div>\n          <input\n            className=\"text-danger\"\n            id=\"inputId\"\n            type=\"text\"\n            placeholder=\"Enter your city\"\n            onChange={getData}\n          />{\" \"}\n          <button onClick={onSubmit} id=\"searchbtn\">\n            {\" \"}\n            search{\" \"}\n          </button>{\" \"}\n          <p className=\"err text-danger\"> {err} </p>{\" \"}\n        </div>{\" \"}\n        <div id=\"main\">\n          <div id=\"left\">\n            {\" \"}\n            {data && (\n              <Sidebar\n                name1={[\"Last Updated : \"]}\n                props1={data.current.last_updated}\n                name2={[\"Humidity : \"]}\n                props2={data.current.humidity}\n                name3={[\"Speed : \"]}\n                props3={data.current.wind_kph}\n                name4={[\" km/h\"]}\n                name5={[\"Sunrise : \"]}\n                props4={data.forecast.forecastday[0].astro.sunrise}\n              />\n            )}{\" \"}\n          </div>{\" \"}\n          {data && (\n            <div id=\"details\" className=\"container bg-light col-12 mt-5\">\n              <h2 id=\"cityName\"> {cityName} </h2>{\" \"}\n              <h4> {data.location.country} </h4>{\" \"}\n              <p className=\"text-muted\"> {data.location.region} </p>{\" \"}\n              <h1 id=\"temp\"> {Math.floor(data.current.temp_c)} &#176;C</h1>\n              <img id=\"icon\" src={data.current.condition.icon} alt='weather icon' />{\" \"}\n              <p> {data.current.condition.text} </p>{\" \"}\n            </div>\n          )}\n          <div id=\"right\">\n            {\" \"}\n            {data && (\n              <Sidebar\n                name1={[\"Time : \"]}\n                // props1={new Date().toLocaleTimeString()}\n                props1={data.location.localtime}\n                name2={[\"Min : \"]}\n                props2={Math.floor(data.forecast.forecastday[0].day.mintemp_c)}\n                unit={\" \\u00b0C\"}\n                name3={[\"Max : \"]}\n                props3={Math.floor(data.forecast.forecastday[0].day.maxtemp_c)}\n                name6={[\"Sunset : \"]}\n                props5={data.forecast.forecastday[0].astro.sunset}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"footer container p-3 bg-dark text-light\">\n        <p className=\"text-center\">\n          copyrights <span>&copy;</span>2021\n          <span>created by Pawan Kumar</span>\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}