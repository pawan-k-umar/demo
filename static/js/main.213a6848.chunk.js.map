{"version":3,"sources":["components/Sidebar.js","App.js","index.js"],"names":["Sidebar","props","id","className","name1","props1","name7","name2","props2","unit","name3","props3","name4","name5","props4","name6","props5","App","useState","name","setName","cityName","setCityName","data","setData","useEffect","a","url","fetch","response","json","fetchApi","success","position","lat","coords","latitude","lon","longitude","fetchCurrentLocation","navigator","geolocation","getCurrentPosition","type","placeholder","onChange","val","target","value","onClick","Date","toJSON","slice","replace","main","humidity","wind","speed","sys","sunrise","country","feels_like","Math","floor","temp","src","weather","icon","alt","description","pressure","temp_min","temp_max","sunset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.213a6848.chunk.js","sourcesContent":["const Sidebar = (props)=>{\r\n    return (\r\n        <>\r\n        <div id=\"left\" className='container col-sm-10 mt-5'>\r\n          <p>{props.name1}{props.props1}{props.name7}</p>\r\n          <p>{props.name2}{props.props2}{props.unit}</p>\r\n          <p>{props.name3}{props.props3}{props.unit}{props.name4}</p>\r\n          <p>{props.name5}{props.props4}{props.name6}{props.props5}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import \"./App.css\";\nimport React, { useState,useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\n\nfunction App() {\n  // const [details, setDetails] = useState();\n\n  const [name, setName] = useState(\"\");\n  const [cityName, setCityName] = useState(\"london\");\n  // const [err, setErr] = useState();\n  const [data, setData] = useState();\n\n\n  useEffect(() => {\n    const fetchApi = async()=>{\n          const APIKEY = '5d3e1ba6775c5a97031d5f4705beeaad';\n          const url = 'https://api.openweathermap.org/data/2.5/weather?q='+cityName+'&units=metric&APPID='+APIKEY+'';\n          const response = await fetch(url);\n          const data = await response.json();\n          setData(data);\n    }\n   fetchApi();\n  },[cityName])\n\n\n  useEffect(() => {\n    function getLocation(){\n        if(navigator.geolocation){\n            navigator.geolocation.getCurrentPosition(success)\n        }\n      }\n      function success(position){\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        const fetchCurrentLocation = async()=>{\n              const APIKEY = '5d3e1ba6775c5a97031d5f4705beeaad';\n              const url = 'https://api.openweathermap.org/data/2.5/weather?lat='+lat+'&lon='+lon+'&appid='+APIKEY+'';\n              const response = await fetch(url);\n              const data = await response.json();\n              // setData(data);\n              setCityName(data.name);\n        }\n        fetchCurrentLocation();\n      }\n        getLocation();\n  },[1])\n\n  // // const APIKEY = '5d3e1ba6775c5a97031d5f4705beeaad';\n  // const APIKEY = \"32fc58c655934bc59ac60022210205\";\n  // // const url = 'https://api.openweathermap.org/data/2.5/weather?q='+cityName+'&units=metric&APPID='+APIKEY+'';\n  // const url =\n  //   \"https://api.weatherapi.com/v1/forecast.json?key=\" +\n  //   APIKEY +\n  //   \"&q=\" +\n  //   cityName +\n  //   \"&days=1&aqi=no&alerts=no\";\n  //   fetch(url)\n  //   .then((response) => response.json())\n  //   .then((result) => {\n  //     // console.log(result);\n  //     // sethumidity(data.current.humidity)\n  //     // setTemp(data.current.temp_c)\n  //     // setSpeed(data.current.wind_kph)\n  //     // setcondi(data.current.condition.text)\n  //     // setIconUrl(data.current.condition.icon)\n  //     // setLatUpdated(data.current.last_updated)\n  //     // setSunrise(data.forecast.forecastday[0].astro.sunrise)\n  //     // setSunset(data.forecast.forecastday[0].astro.sunset)\n  //     // setMinTemp(data.forecast.forecastday[0].day.mintemp_c)\n  //     // setMaxTemp(data.forecast.forecastday[0].day.maxtemp_c)\n  //     // setTime(data.location.localtime)\n  //     // setcountryName(data.location.country)\n  //     // setRegion(data.location.region)\n  //     setData(result);\n  //   })\n  //   .catch((err) => {\n  //     setErr(err.message);\n  //   });\n\n  function getData(val) {\n    setName(val.target.value);\n  }\n\n  function onSubmit() {\n    setCityName(name);\n  }\n\n\n  return (\n    <>\n      <div className=\"App container\" >\n        <h1 className=\"logo\"> Weather App </h1>\n        <div>\n          <input\n            id=\"inputId\"\n            type=\"text\"\n            placeholder=\"Enter your city\"\n            onChange={getData}\n          />\n          <button onClick={onSubmit} id=\"searchbtn\">\n            \n            search\n          </button>\n        </div>\n        {\n          !cityName?\n          <p className='text-danger'>city not found</p>\n        :<div id=\"main\">\n          <div id=\"left\">\n            \n            {data && (\n              <Sidebar className='col-12'\n                name1={[\"Today : \"]}\n                props1={new Date().toJSON().slice(0,10).replace(/-/g,'/')}\n                name2={[\"Humidity : \"]}\n                props2={data.main.humidity}\n                name3={[\"Speed : \"]}\n                props3={data.wind.speed}\n                name4={[\" km/h\"]}\n                name5={[\"Sunrise : \"]}\n                props4={Date((data.sys.sunrise)*1000)}\n              />\n            )}\n          </div>\n          {data && (\n            <div id=\"details\" className=\"container mt-5\">\n              <h2 id=\"cityName\"> {cityName} </h2>\n              <h4> {data.sys.country} </h4>\n              <p className=\"text-muted\"> feels_like : {data.main.feels_like} </p>\n              <h1 id=\"temp\"> {Math.floor(data.main.temp)} &#176;C</h1>\n              <img id=\"icon\" src={'http://openweathermap.org/img/wn/'+data.weather[0].icon+'.png'} alt='weather icon' />\n              <p> {data.weather[0].description} </p>\n            </div>\n          )}\n          <div id=\"right\">\n            \n            {data && (\n              <Sidebar\n                name1={[\"Pressure : \"]}\n                // props1={new Date().toLocaleTimeString()}\n                props1={data.main.pressure/1000}\n                name2={[\"Min : \"]}\n                name7={[\" nPa\"]}\n                props2={Math.floor(data.main.temp_min)}\n                unit={\" \\u00b0C\"}\n                name3={[\"Max : \"]}\n                props3={Math.floor(data.main.temp_max)}\n                name6={[\"Sunset : \"]}\n                props5={Date((data.sys.sunset))}\n              />\n            )}\n          </div>\n        </div>\n        }\n      </div>\n      <div className=\"footer container p-3 text-light\">\n        <p className=\"text-center\">\n          copyrights <span>&copy;</span>2021\n          <span>created by Pawan Kumar</span>\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}